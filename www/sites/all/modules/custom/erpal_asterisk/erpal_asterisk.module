<?php
/*
 * @file
 * Code for the erpal_asterisk module.
 */


/*
* Implements hook_menu
*/ 
function erpal_asterisk_menu(){

  require_once 'inc/config.inc';
  $items = _erpal_asterisk_menu();
  return $items;
} 



/*
 *	Send data to the data dispatch server
 *
 *	@param data (string) The data to be sent
 *	@result A boolean indicating whether the communication was successful or not
 */
function erpal_asterisk_send_dispatch_data( $data, $source, $destination ) {
  
	//$file	= drupal_get_path('module','erpal_asterisk').'/last_call.htm';
	//file_put_contents( $file, $data );
  
  //set POST variables
  $url = 'http://' . variable_get('asterisk_nodejs_host') . ':' . variable_get('asterisk_nodejs_http_port') . '/ingoing';
  
  // dpm($url);
  $phone_number = libphonenumber_normalize($destination);
  
  // dpm($phone_number);
  $fields = array(
      'destination' => $phone_number,
      'caller_data' => urlencode($data)
  );
  $fields_string = '';
  foreach ($fields as $key => $value) {
    $fields_string .= $key . '=' . $value . '&';
  } 
  $fields_string = rtrim($fields_string, '&');
  $options = array(
    'method' => 'POST',
    'data' => $fields_string,
  );

  //send data to node.js server
  drupal_http_request($url, $options);
}

/*
 * This function implements hook of asterisknotify module and get view of an contact
 */

function _erpal_asterisk_call($destination, $source = NULL){
  
  module_invoke_all('ingoing_call', $destination, $source);
  $s = ($source == NULL) ? 'NULL' : $source;
  return 'call notification with destination ' 
    . $destination 
    . ' and source ' 
    . $s 
    . ' forwarded to asterisk_notify.';
    
  return implode (
  	'', 
    module_invoke_all('ingoing_call', $destination, $source)
  ); 
  //_erpal_asterisk_request();
}


function _erpal_asterisk_request($destination, $source = False, $html){

   // JAVASCRIPT REQUEST FOLGT HIER
   return $html; 
}


/**
 * implements hook_field_attach_presave() to save normalized phone numbers 
 * everytime a field collection of type phone_number is saved
 */
function erpal_asterisk_field_attach_presave($type, $entity){
    
  if($type == 'field_collection_item' && $entity->field_name == 'field_phone') {
    $phone_number = $entity->field_phone_number[LANGUAGE_NONE][0]['value'];
    if(!isset($entity->field_phone_number_normalized[LANGUAGE_NONE][0])) $phone_number_normalized_old = "";
    else $phone_number_normalized_old = $entity->field_phone_number_normalized[LANGUAGE_NONE][0]['value'];
   
    $phone_number_normalized = libphonenumber_normalize($phone_number);
    
    if($phone_number_normalized != $phone_number_normalized_old) {
      $entity->field_phone_number_normalized[LANGUAGE_NONE][0]['value'] = $phone_number_normalized;
    }
  }
}



