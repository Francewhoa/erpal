<?php
/*
 * @file
 * Code for the erpal_asterisk module.
 */


/*
* Implements hook_menu
*/ 
function erpal_asterisk_menu(){

  require_once 'inc/config.inc';
  $items = _erpal_asterisk_menu();
  return $items;
} 


/**
 * Implements form validate function for _asterisk_config_form
 * 
 */
function _erpal_asterisk_contig_form_validate(&$form, &$form_state){
  // @TODO: implement
  
}

/**
 *  Implemtents form Submit Function for _asterisk_config_form
 */
function _erpal_asterisk_config_form_submit(&$form, &$form_state) {

  variable_set('asterisk_nodejs_host'  	 , $form_state['values']['host']);
  variable_set('asterisk_nodejs_http_port'    , $form_state['values']['http_port']);
  variable_set('asterisk_nodejs_socket_port'    , $form_state['values']['socket_port']);
  variable_set('asterisk_nodejs_lifetime', $form_state['values']['lifetime']);
  
   
}

/*
 *	Send data to the data dispatch server
 *
 *	@param data (string) The data to be sent
 *	@result A boolean indicating whether the communication was successful or not
 */
function erpal_asterisk_send_dispatch_data( $data, $source, $destination ) {
  
	//$file	= drupal_get_path('module','erpal_asterisk').'/last_call.htm';
	//file_put_contents( $file, $data );
  
  //set POST variables
  $url = 'http://' . variable_get('asterisk_nodejs_host') . ':' . variable_get('asterisk_nodejs_http_port') . '/ingoing';
  
  dpm($url);
  // $phone_number = libphonenumber_format(urlencode($destination));
  $phone_number = $destination;
  $fields = array(
      'destination' => $phone_number,
      'caller_data' => urlencode($data)
  );
  $fields_string = '';
  foreach ($fields as $key => $value) {
    $fields_string .= $key . '=' . $value . '&';
  } 
  $fields_string = rtrim($fields_string, '&');
  $options = array(
    'method' => 'POST',
    'data' => $fields_string,
  );

  //send data to node.js server
  drupal_http_request($url, $options);
}


/**
 * Implements hook_entity_update()
 */
function erpal_asterisk_entity_update($entity, $type) {
  if($type == 'field_collection_item' && $entity->field_name == 'field_phone') {
    $phone_number = $entity->field_phone_number[LANGUAGE_NONE][0]['value'];
    
    if(!isset($entity->field_phone_number_normali[LANGUAGE_NONE][0])) {
      $phone_number_normalized_old = "";
    }
    else {
      $phone_number_normalized_old = $entity->field_phone_number_normali[LANGUAGE_NONE][0]['value'];
    }
    
    // TODO: find out why libphonenumber is not working correctly or use own
    // function (-> _erpal_asterisk_normalize_phone_number())
    $phone_number_normalized =  libphonenumber_format($phone_number);

    if($phone_number_normalized != $phone_number_normalized_old) {
      //$entity->field_phone_number_normali[LANGUAGE_NONE][0]['value'] = $phone_number_normalized;
      //$entity->save(TRUE);
    }
  }
}


/*
 * This function implements hook of asterisknotify module and get view of an contact
 */

function _erpal_asterisk_call($destination, $source = NULL){
  
  module_invoke_all('ingoing_call', $destination, $source);
  $s = ($source == NULL) ? 'NULL' : $source;
  return 'call notification with destination ' 
    . $destination 
    . ' and source ' 
    . $s 
    . ' forwarded to asterisk_notify.';
    
  return implode (
  	'', 
    module_invoke_all('ingoing_call', $destination, $source)
  ); 
  //_erpal_asterisk_request();
}


function _erpal_asterisk_request($destination, $source = False, $html){

   // JAVASCRIPT REQUEST FOLGT HIER
   return $html; 
}

function _erpal_asterisk_normalize_phone_number($phone_number) {

}


