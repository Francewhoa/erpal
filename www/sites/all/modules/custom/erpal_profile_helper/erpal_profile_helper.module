<?php
/**
 * @file
 * Code for the erpal_profile_helper module.
 */

/**
* Implementes hook_field_attach_validate() 
*/
function erpal_profile_helper_field_attach_validate($entity_type, $entity, &$errors) {
 // DEBUG
 dpm(_erpal_profile_helper_get_contract(125, -1, array(1), false));
  if ($entity_type == 'field_collection_item' && $entity->field_name == 'field_contract_data') {
    $new_errors = _erpal_profile_helper_profile_contract_entity_validate($entity);
    $errors = array_merge($errors, $new_errors);
  }

}
 

/**
* Validate the profile form
* @result array with errors key is $array[fieldname][languag_code][delat] = array ('error' => 'module name', 'message' => the message);
*/
function _erpal_profile_helper_profile_contract_entity_validate($contract_entity) {
  return _erpal_profile_helper_contract_validate_all_set($contract_entity);
}

/**
* Validates if all necessary fields are filled
*/
function _erpal_profile_helper_contract_validate_all_set($contract_entity) {
  $errors = array();
  //now go through all fields and validate
  $entity = $contract_entity; 
  if (is_object($entity)) {
    //if valid since is set, member type must be set, too
    
    //############ INIT VARIABLES ####################
    $price_needed = false;
    $member_type = false;
    if (isset($entity->field_member_type[LANGUAGE_NONE][0])) {
      $member_type = $entity->field_member_type[LANGUAGE_NONE][0]['value'];
    }
    
    $valid_since = false;
    if (isset($entity->field_valid_since[LANGUAGE_NONE][0])) {
      $valid_since = $entity->field_valid_since[LANGUAGE_NONE][0]['value'];
    }
    
    $price = false;
    if (isset($entity->field_price[LANGUAGE_NONE][0])) {
      $price = $entity->field_price[LANGUAGE_NONE][0]['value'];
    }
    
    $hours_per_week = false;
    if (isset($entity->field_hours[LANGUAGE_NONE][0])) {
      $hours_per_week = $entity->field_hours[LANGUAGE_NONE][0]['value'];
    }
    
    $holiday_per_year = false;
    if (isset($entity->field_holiday_per_year[LANGUAGE_NONE][0])) {
      $holiday_per_year = $entity->field_holiday_per_year[LANGUAGE_NONE][0]['value'];
    }
    
    $vat_rate = false;
    if (isset($entity->field_vat_rate[LANGUAGE_NONE][0])) {
      $vat_rate = $entity->field_vat_rate[LANGUAGE_NONE][0]['value'];
    }
    
    $currency = false;
    if (isset($entity->field_currency[LANGUAGE_NONE][0])) {
      $currency = $entity->field_currency[LANGUAGE_NONE][0]['value'];
    }    
    
    $billing_duration = false;
    if (isset($entity->field_billing_duration[LANGUAGE_NONE][0])) {
      $billing_duration = $entity->field_billing_duration[LANGUAGE_NONE][0]['value'];
    }
    
    //############### LOGICAL IMPLEMENTATION ############
    if ($valid_since) {            
      if (!$member_type)
        $errors['field_member_type'][LANGUAGE_NONE][0][] = array(
          'error' => 'erpal_profile_helper',
          'message' => t('Please enter member type field if field valid since has a value'),
        );      
    } 
   
    
    //if member type is set, valid since be set, too
    if ($member_type) {      
      $price_needed = true;  //if member type is set, we need a price, too      
      if (!$valid_since) {
        $errors['field_valid_since'][LANGUAGE_NONE][0][] = array(
          'error' => 'value',
          'message' => t('Please enter valid since field if field member type has a value'),
        );
      }
      
    } 
    
    if ($price_needed) {            
      if (!$price) {
        $errors['field_price'][LANGUAGE_NONE][0][] = array(
          'error' => 'erpal_profile_helper',
          'message' => t('Please enter price field'),
        );
      }       
    }
    
    //if it is a freelancer, no holiday, no working time per week are allowed
    if ($member_type == 'freelancer') {
      if ($holiday_per_year) {
        $errors['field_holiday_per_year'][LANGUAGE_NONE][0][] = array(
          'error' => 'erpal_profile_helper',
          'message' => t('A freelancer must not have holiday per year set'),
        );
      } 
      
      if ($hours_per_week) {
        $errors['field_hours'][LANGUAGE_NONE][0][] = array(
          'error' => 'erpal_profile_helper',
          'message' => t('A freelancer must not have fixed working hours a week'),
        );
      } 
      
      //now validate the needed fields, vat_rate, billing_duration, currency
    }
    
    //if it is an employee, no vat rate, billing duration and currency are allowed
    if ($member_type == 'full_employee') {
      if ($vat_rate) {
        $errors['field_vat_rate'][LANGUAGE_NONE][0][] = array(
          'error' => 'erpal_profile_helper',
          'message' => t('An employee must not have vat rate set'),
        );
      } 
      
      if ($billing_duration) {
        $errors['field_billing_duration'][LANGUAGE_NONE][0][] = array(
          'error' => 'erpal_profile_helper',
          'message' => t('An employee must not have billing duration set'),
        );
      } 
      
      if ($currency) {
        $errors['field_currency'][LANGUAGE_NONE][0][] = array(
          'error' => 'erpal_profile_helper',
          'message' => t('An employee must not have currency set'),
        );
      }
      
      //now validate the needed fields, field_holiday_per_year and field_hours
    }    
  }

  return $errors;
}

/**
* Returns contract data for a given user since or at a given data
* @param $date_match if true, the date must be exact the given date, orherwise it the closes bevore that date
* @param $only_current if true, we return only one contract, the currently newes active one
* @param $date_since only contracts that are enabled after this date are returned. If you want any contrct, set -1
* @uid the uid for whom we are querying the contract 
* @param $project_tag_tids only if the project has tags that match the given tids in this param, return the contract. OR values, not AND!
* @return array contract data for a given user since or at a given data
*/
function _erpal_profile_helper_get_contract($uid, $date_since=false, $project_tag_tids=array(), $only_current=true, $date_match=false) {
  if (!$date_since)
    $date_since = time();
  elseif ($date_since < 0)
    $date_since = PHP_INT_MAX;  //so every contract should be active bevor this unixtimestamp!
    
  $a_user = user_load($uid);
  $profile = profile2_load_by_user($a_user);
  
  $contract = $profile['contract'];
  
  $contract_datas = array();
  $contract_datas_date = array();
  foreach ($contract->field_contract_data[LANGUAGE_NONE] as $delta=>$contract_id) {
    $contract_id = $contract_id['value'];
    
    //load the field collection entity
    $contract_data_entity = entity_load('field_collection_item', array($contract_id));
    $contract_data_entity = $contract_data_entity[$contract_id];
    
    //check the date
    $contract_date_since = $contract_data_entity->field_valid_since[LANGUAGE_NONE][0]['value'];

    if ($date_match && $date_since != $contract_date_since)
      continue;  //do not add this entity
    
    if ($date_since && $contract_date_since > $date_since)
      continue;  //this contract is not active, because it is not bevore date_since!
    
    //check project tags
    if (count($project_tag_tids) > 0) {
      $tag_ids = $contract_data_entity->field_project_tags[LANGUAGE_NONE];
      $has_matching_term = false;
      foreach ($tag_ids as $id) {
        $tid = $id['tid'];

        if (in_array($tid, $project_tag_tids))
          $has_matching_term = true;        
      }
            
      if (!$has_matching_term)
        continue;
    }
    
    if ($contract_id) {
      $contract_datas_date[$contract_date_since] = $contract_id;
      $contract_datas[$contract_id] = $contract_data_entity;
    }
  }
 
  //now return only the current contract if param is set
  if ($only_current) {
    if (count($contract_datas) >= 0)
      return $contract_datas;
    krsort($contract_datas_date);  //the newes at the top
    //get the top most element
    $data_dates = array_values($contract_datas_date);
    $contract_id = array_shift($data_dates);
    return array($contract_datas[$contract_id]);
  }
  
  //otherwise return all contracts as an array
  return array_values($contract_datas);
}