<?php
/**
 * @file
 * Code for the erpal_crm_helper module.
 * This is needed by the feature_erpal_crm
 */

/**
* Implements hook_menu
*/ 
function erpal_crm_helper_menu(){

  $items = array();
  
  require_once 'inc/config.inc';
  $config_items = _erpal_crm_helper_config_menu();
  
  $items = array_merge($items, $config_items);
  return $items;
}
  
/**
* Implements hook_permission
*/
function erpal_crm_helper_permission(){
  return array(
    'config erpal crm' => array(
      'title' => t('Administer ERPAL CRM'), 
      'description' => t('Perform administration tasks for ERPAL CRM module.'),
    ),
    'reply mails erpal crm activity' => array(
      'title'       => t('Mail reply from activity node'), 
      'description' => t('Shows a mailto reply link for the specific user on activity nodes and the commtents of such nodes.'),
    ),
  );
}
 
/**
* Implements hook_view_contacts_header_content called by module erpal_basic_helper
*/
function erpal_crm_helper_view_contacts_header_content(){
  
  //link for creating an activity
  $add_erpal_activity =  _erpal_crm_helper_create_activity_link();
  
  return array(
    $add_erpal_activity,
  );
}


function _erpal_crm_helper_view_activities_header_content(){

  $add_erpal_activity =  _erpal_crm_helper_create_activity_link();
  
  $my_content = array(
    $add_erpal_activity,
  );
  
  //ask all other modules for content in the header area of the view
  $other_module_content = module_invoke_all('view_activities_header_content');
  
  $all_content = array_merge($other_module_content, $my_content);
  
  $content = '';
  foreach ($all_content as $a_content) {
    $content .= '<br>'.$a_content;
  }
  
  return $content;
}

/**
* Helper function to create new activity link
*/
function _erpal_crm_helper_create_activity_link($q_arg = false, $query_arr = array(), $title=false){
  if (!$q_arg)
    $q = current_path();
  else 
    $q = $q_arg;
  
  if (!isset($query_arr['destination']) || $q_arg)
    $query_arr['destination'] = $q;
  
  $title = t("Create new activity"); 
  return l(
    $title, "node/add/erpal-crm-activity", array(
        'query' => $query_arr,
    )
  );
}

/*
 * Implements hook_node_view_alter.
 * Used to add "Reply per mail" links to an activity node and the comments of such a node.
 */
function erpal_crm_helper_node_view_alter(&$build) {

  if ($build['#bundle'] != 'erpal_crm_activity') {
    
    return;
  }
  
  if (! user_access ('reply mails erpal activity')) {
    
    return;
  }
  
  if (isset ($build['#node']->field_contact_ref[LANGUAGE_NONE][0]['node'])) {
    
    $build ['links']['node']['#links']['reply_link']  = _erpal_crm_helper_create_reply_link (
      $build['#node']->field_contact_ref[LANGUAGE_NONE][0]['node']->field_email[LANGUAGE_NONE][0]['value'], 
      $build['#node']->title, 
      $build['#node']->nid
    ); 
  }
  
  $comments = isset ($build['comments']['comments']) ? $build['comments']['comments'] : array ();
  
  foreach ($comments as $id=>&$comment) {
    
    if (intval ($id) > 0) {
      
      $build['comments']['comments'][$id]['links']['comment']['#links']['reply_link'] = _erpal_crm_helper_create_reply_link (
        $comment['#comment']->mail, 
        $comment['#comment']->subject, 
        $comment['#comment']->nid
      ); 
    }
  }
  
  return;
}

/*
 * This function creates the config array for a reply link.
 * @param 	string $receiver	The email of the receiver.
 * @param 	string $subject		The subject of the mail.
 * @param 	string $ticket		The ticket number.
 * @return	array							A config array for a theme link function.
 */
function _erpal_crm_helper_create_reply_link ($receiver, $subject, $ticket) {
  
  if (drupal_load ('module', 'erpal_crm_mailaction')) {
    $cc = _erpal_crm_mailaction_get_settings (ERPAL_CRM_MAILACTION_CONFIG_GROUP_IMPORT_SETTINGS, 'cc_box');
  }
  
  return array ( 
  'title'=> t('Reply per mail'),
  'href' => 'mailto: ' . 
    $receiver . 
    '?subject=Re:' . 
    $subject . 
    ' [ticket:' . $ticket . ']' .
    (isset ($cc) ? '&cc=' . $cc : ''),
  'html' => TRUE
  );
}
