<?php
/**
 * @file
 * Code for the erpal_invoice_helper module.
 */
module_load_include('inc', 'erpal_invoice_helper', 'inc/views_links');
/**
* Implements hook_menu
*/ 
function erpal_invoice_helper_menu(){

  $items = array();
  
  $items['admin/erpal/debug'] = array(
    'page callback' => '_erpal_invoice_helper_debug',    
    'access callback' => true,
  );
  
  require_once 'inc/config.inc';
  $config_items = _erpal_invoice_helper_config_menu();
  
  $items = array_merge($items, $config_items);
  return $items;
} 

/**
* Implements hook_permission
*/
function erpal_invoice_helper_permission(){
  return array(
    'config erpal invoice' => array(
      'title' => t('Administer ERPAL invoice'), 
      'description' => t('Perform administration tasks for ERPAL invoice module.'),
    ),
  );
}

/**
* Function to start caclulating all the fields on an invoice node
* @param $invoice the invoice node the caclulation will be processed
*/
function _erpal_invoice_helper_caclulate_invoice($invoice) {

  module_load_include('inc', 'erpal_invoice_helper', 'inc/invoice.calc');
  _erpal_invoice_helper_calculate_fields($invoice);
}

/**
* Implements hook_node_update
*/
function erpal_invoice_helper_node_update($node) {
  //it must be an invoice node
  $type = node_type_get_type($node);

  if ($type->type == 'erpal_invoice')
    _erpal_invoice_helper_caclulate_invoice($node);
}

/**
* Implements hook_node_insert
*/
function erpal_invoice_helper_node_insert($node) {
  //it must be an invoice node
  $type = node_type_get_type($node);

  if ($type->type == 'erpal_invoice')
    _erpal_invoice_helper_caclulate_invoice($node);
}

/**
* Node gets validated
*/
function erpal_invoice_helper_node_validate($node, $form, &$form_state) {
  //it must be an invoice node
  $type = node_type_get_type($node);

  if ($type->type == 'erpal_invoice') {
     module_load_include('inc', 'erpal_invoice_helper', 'inc/invoice.validate');
    $errors = _erpal_invoice_helper_invoice_validate($node);
    //now set form errors
    foreach ($errors as $fieldname=>$field_errors) {
      foreach ($field_errors as $text) {
        form_set_error($fieldname, $text);
      } 
    }
  }
}