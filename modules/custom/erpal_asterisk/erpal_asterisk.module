<?php
/*
 * @file
 * Code for the erpal_asterisk module.
 */
 
/**
 * Adds the profile2 asterisk-settings with a field phone for the normalized phone number
 */
// module_load_include('inc', 'erpal_asterisk', 'inc/profile');
/*
* Implements hook_menu
*/ 
function erpal_asterisk_menu(){

  require_once 'inc/config.inc';
  $items = _erpal_asterisk_menu();
  return $items;
} 

/**
 * implements hook_permission()
 */
function erpal_asterisk_permission(){
  return array(
    'config erpal asterisk' => array(
      'title' => t('Configure ERPAL Asterisk'), 
      'description' => t('Configure ERPAL Asterisk Core and ERPAL Asterisk Notification modules.'),
    ),
  );
}


function _erpal_asterisk_create_key(){
  
  $secret = variable_get('erpal_asterisk_secret', 'erpal');
  // if(isset($_POST['secret']) && $_POST['secret'] == $secret){
  if(isset($_POST['secret']) && $_POST['secret'] == $secret){
    $key = drupal_hmac_base64(drupal_random_bytes(512), drupal_get_private_key() . drupal_get_hash_salt());
    $lifetime = variable_get('erpal_asterisk_call_lifetime', '60');

    $url = 'http://' . variable_get('erpal_asterisk_nodejs_host', '127.0.0.1') 
    . ':' . variable_get('erpal_asterisk_nodejs_port', '8080');

    $response = drupal_http_request($url . '/asterisk/authenticate',
      array(
        'method' => 'POST',
        'data' => json_encode(array(
          'secret' => $secret, 
          'key' => $key, 
          'call_lifetime' => $lifetime,
        )),
        'headers' => array(
          'Content-Type' => 'application/json', 
          'Accept' => 'application/json'
        ),
      )
    );
    if(isset($response) && $response->data == 'ok'){
      variable_set('erpal_asterisk_authentication', $key);    
      print_r('ok');
      die();
    }
  }
  print_r('');
  die();
}


/**
 * Returns the html code of the asterisk_notification to the html request 
 */
function _erpal_asterisk_call(){
  if(isset($_POST['authentication']) && $_POST['authentication'] == variable_get('erpal_asterisk_authentication')){
    $source = isset($_POST['source']) ? $_POST['source'] : NULL;
     // // Implements hook_ingoing_call to inform other modules about a call
     // // module_invoke_all('ingoing_call', $destination, $source);
    $notification = erpal_asterisk_notify_ingoing_call($source);
    print_r($notification);
    die();
  }
  print_r('');
  die();
}

/**
 * Takes a phonenumber given in $_POST['number'] and returns the normalized number via html
 */
function _erpal_asterisk_normalize(){
  if(isset($_POST['authentication']) && $_POST['authentication'] == variable_get('erpal_asterisk_authentication')){
    if(isset($_POST['numbers'])){
      $numbers = json_decode($_POST['numbers']);
      $normalized = array();
      foreach ($numbers as $key => $value) {
        $normalized[$key] = libphonenumber_normalize($value);
      }
      $out = json_encode($normalized);
      print_r($out);
      die();
    }
  }
  print_r('');
  die();
}

/**
 * implements hook_field_attach_presave() to save normalized phone numbers 
 * everytime a field collection of type phone_number is saved
 */
function erpal_asterisk_field_attach_presave($type, $entity){ 
  if($type == 'field_collection_item' && $entity->field_name == 'field_phone') {
    $phone_number = $entity->field_phone_number[LANGUAGE_NONE][0]['value'];
    if(!isset($entity->field_phone_number_normalized[LANGUAGE_NONE][0])) $phone_number_normalized_old = "";
    else $phone_number_normalized_old = $entity->field_phone_number_normalized[LANGUAGE_NONE][0]['value'];
    $phone_number_normalized = libphonenumber_normalize($phone_number);
    if($phone_number_normalized != $phone_number_normalized_old) {
      $entity->field_phone_number_normalized[LANGUAGE_NONE][0]['value'] = $phone_number_normalized;
    }
  }
}



