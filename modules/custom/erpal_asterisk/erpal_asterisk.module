<?php
/*
 * @file
 * Code for the erpal_asterisk module.
 */
 
/**
 * Adds the profile2 asterisk-settings with a field phone for the normalized phone number
 */
// module_load_include('inc', 'erpal_asterisk', 'inc/profile');
/*
* Implements hook_menu
*/ 
function erpal_asterisk_menu(){

  require_once 'inc/config.inc';
  $items = _erpal_asterisk_menu();
  return $items;
} 

/**
 * implements hook_permission()
 */
function erpal_asterisk_permission(){
  return array(
    'config erpal asterisk' => array(
      'title' => t('Configure ERPAL Asterisk'), 
      'description' => t('Configure ERPAL Asterisk Core and ERPAL Asterisk Notification modules.'),
    ),
  );
}


/**
 * Returns the html code of the asterisk_notification to the html request 
 */
function _erpal_asterisk_call(){
  $source = isset($_POST['source']) ? $_POST['source'] : NULL;
  // // Implements hook_ingoing_call to inform other modules about a call
  // // module_invoke_all('ingoing_call', $destination, $source);
  $notification = erpal_asterisk_notify_ingoing_call($source);
  print_r($notification);
  die();
}

/**
 * Takes a phonenumber given in $_POST['number'] and returns the normalized number via html
 */
function _erpal_asterisk_normalize(){
  
  $destination = (isset($_POST['destination'])) 
    ? $destination = libphonenumber_normalize($_POST['destination'])
    : 'unknown';
  $source = (isset($_POST['source'])) 
    ? $source = libphonenumber_normalize($_POST['source'])
    : 'unknown';
  $out = json_encode(array('destination' => $destination, 'source' => $source)); 
  print_r($out);
  die();
}

/**
 * implements hook_field_attach_presave() to save normalized phone numbers 
 * everytime a field collection of type phone_number is saved
 */
function erpal_asterisk_field_attach_presave($type, $entity){
    
  if($type == 'field_collection_item' && $entity->field_name == 'field_phone') {
    $phone_number = $entity->field_phone_number[LANGUAGE_NONE][0]['value'];
    if(!isset($entity->field_phone_number_normalized[LANGUAGE_NONE][0])) $phone_number_normalized_old = "";
    else $phone_number_normalized_old = $entity->field_phone_number_normalized[LANGUAGE_NONE][0]['value'];
    $phone_number_normalized = libphonenumber_normalize($phone_number);
    if($phone_number_normalized != $phone_number_normalized_old) {
      $entity->field_phone_number_normalized[LANGUAGE_NONE][0]['value'] = $phone_number_normalized;
    }
  }
}



