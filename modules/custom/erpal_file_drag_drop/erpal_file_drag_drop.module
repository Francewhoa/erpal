<?php
/**
 *  @file erpal_file_drag_drop/erpal_file_drag_drop.module
 *  @author Thiemo Müller
 *  @version 1.0
 *  
 *  Define all public functions, hooks and globally available (i.e. reused) private functions
 */

/**
 *  Implements hook_init
 */
function erpal_file_drag_drop_init() {
  
  // Assure that the pages,inc of the node module always gets loaded, since the form can't be submitted if it is missing...
  $hyphen_type  = 'erpal-file';
  $menu_item    = menu_get_item( 'node/add/'.$hyphen_type );
  include_once( $menu_item['include_file'] );
  
  $messages     = array(
    'confirm'     => t( "Do you wish to upload the file now?\n\t\nElse you can still add some tags." ),
    'drop'        => t( 'Create Managed File.' ),
    'edit'        => t( 'Drop here to edit %title.' ),
    'error'       => t( 'Please finish uploading first.' ),
  );
  
  drupal_add_js( array( 'erpal_file_drag_drop'=>array( 'messages'=>$messages ) ), 'setting' );
  
}

/**
 *  Implements hook_block_info()
 */
function erpal_file_drag_drop_block_info() {
  
  $blocks           = array(
    
    'erpal_file_drag_drop' => array(
      'info'            => t('File block'),
    ),
    
  );
  
  return $blocks;
  
}

/**
 *  Submit the given ERPAL File node form per AJAX
 */
function erpal_file_drag_drop_ajax_submit_handler( $form, &$form_state ) {
  $type   = 'erpal_file';
  //drupal_form_submit( $type.'_node_form', $form_state );
  
  $node = $form_state['node'];
  
  return _erpal_file_drag_drop_get_ajax_node_form( isset($node->nid) ? $node->title.' ('.$node->nid.')' : NULL, $form );
}

function erpal_file_drag_drop_form_erpal_file_node_form_alter( &$form, &$form_state, $form_id ) {
  $node = $form['#node'];
  
  if( isset($node->erpal_file_drag_drop_ajax) ) {
    $form['actions']['submit']['#ajax']  = array(
      'callback'      => 'erpal_file_drag_drop_ajax_submit_handler',
      'wrapper'       => 'erpal-file-block-ajax',
      'method'        => 'replace',
      'effect'        => 'fade',
    );
    
    $form['field_docs_file'][LANGUAGE_NONE][0]['#default_value'] = array( 'fid'=>0, 'display'=>FALSE, 'description'=>'' );
  }
  
}

function _erpal_file_drag_drop_get_ajax_node_form( $value=NULL, $form=NULL ) {
  global $user;
  
  $type   = 'erpal_file';
  $empty  = array(
    'uid'       => $user->uid,  
    'name'      => (isset($user->name) ? $user->name : ''),  
    'type'      => $type,  
    'language'  => LANGUAGE_NONE,
    'erpal_file_drag_drop_ajax' => TRUE,
  );
  
  $node = (object)$empty;
  if( !$form )
    $form = drupal_get_form( $type.'_node_form', $node );
  
  if( $value )
    $message  = '<div id="erpal-file-block-ajax-value">'.$value.'</div>';
  else
    $message  = '<div id="erpal-file-block-ajax-message"><div class="message-inner">'.t('Simply drop your file here.').'</div></div>';
  
  $subform  = array(
    '#prefix' => $message.'<div id="erpal-file-block-ajax">',
    '#markup' => '',
    'form'    => $form,
    '#suffix' => '</div>',
  );
  
  return $subform;
}

/**
 *  Implements hook_block_view()
 */
function erpal_file_drag_drop_block_view( $delta='' ) {
  
  $block  = array();
  
  if( $delta=='erpal_file_drag_drop' ) {
    
    global $user;
    $type = 'erpal_file';
    
    // Empty node to use for adding
    $empty  = array(
      'uid'       => $user->uid,  
      'name'      => (isset($user->name) ? $user->name : ''),  
      'type'      => $type,  
      'language'  => LANGUAGE_NONE,
    );
    $node = (object)$empty;
    $form = drupal_get_form( $type.'_node_form', $node );
    
    // Wrap the whole content to get some unique ID's for scripting and theming
    $message  = '<div id="erpal-file-block-message"><div class="message-inner">'.t('Simply drop your file here.').'</div></div>';
    $contents = array(
      '#prefix' => $message.'<div id="erpal-file-block">',
      '#markup' => '',
      'form'    => $form,
      '#suffix' => '</div>',
    );
    
    // Add AJAX Form for simple drag&drop ERPAL file referencing
    $subform              = _erpal_file_drag_drop_get_ajax_node_form();
    $contents['#suffix']  .= drupal_render( $subform );
    
    
    // Add the same form for editing, if a file is being viewed
    if( arg(0)=='node' && arg(1) && !arg(2) ) {
      $node = node_load( arg(1) );
      if( $node && $node->nid && $node->type==$type ) {
        
        $message  = '<div id="erpal-file-block-edit-message"><div class="message-inner">'.t('Simply drop your file here.').'</div><div class="edit-title">'.check_plain( $node->title ).'</div></div>';
        $subform  = array(
          '#prefix' => $message.'<div id="erpal-file-block-edit">',
          '#markup' => '',
          'form'    => drupal_get_form( $type.'_node_form', $node ),
          '#suffix' => '</div>',
        );
        $contents['#suffix']  .= drupal_render( $subform );
        
      }
    }
    
    // Output
    $block  = array(
      'subject' => t( 'Upload file' ),
      'content' => $contents,
    );
    
  }
  
  return $block;
  
}