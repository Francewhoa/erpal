<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE project>
<project name="erpal.brightsolutions.de" default="build" basedir=".">
	<property name="domain" value="erpal.brightsolutions.de" />

	<!-- set to update scripts key after installing the project -->
	<property name="updatescripts.key" value="TODO: insert" />
	
	<!-- defaults should be fine but can be customized -->
	<property name="dump.db.url" value="http://jenkins.${domain}/bs_backup/dump/1/0/${updatescripts.key}" />
	<property name="updatescripts.clear.url" value="http://jenkins.${domain}/bsupdatescript/clear/${updatescripts.key}" />
	<property name="updatescripts.process.url" value="http://jenkins.${domain}/process_update_scripts/${updatescripts.key}" />

	<!-- paths to ignore for code metrics -->
	<property name="metrics.ignore" value="www/sites/all/modules/custom/erpal_asterisk_notify/nicokaiser-php-websocket" />
	
	<!-- paths that should be added to git when creating a snapshot -->
	<property name="snapshot.new_paths" value="docs sql" />
	
	<!-- other properties for metrics -->
	<property name="metrics.standard" value="Drupal" />
	<property name="php.suffixes" value="php,inc,php5,module" />
	
	<!-- Things below this line shouldn't need changing... -->
	
	<condition property="ext" value=".bat" else="">
		<os family="windows"/>
 	</condition>
 	<condition property="subdomain" value="local" else="dev">
		<os family="windows"/>
 	</condition>

	<target name="clean" description="Clean up and create artifact directories">
  		<!-- Delete artefact directories -->
  		<delete dir="${basedir}/_logs/phpcs" />  
  		<delete dir="${basedir}/_logs/phpcpd" />
  		<delete dir="${basedir}/_logs/phploc" />
  		<!-- Create artefact directories -->
  		<mkdir dir="${basedir}/_logs/phpcs" />  
  		<mkdir dir="${basedir}/_logs/phpcpd" />
  		<mkdir dir="${basedir}/_logs/phploc" />
 	</target>

 	<target name="metrics" description="Run the phpcs, phpcpd, and phploc tasks in parallel using a maximum of 2 threads.">
  		<parallel threadCount="2">
   			<antcall target="phpcs"/>
   			<antcall target="phpcpd"/>
   			<antcall target="phploc"/>
  		</parallel>
 	</target>

	<target name="phpcs" description="Generate checkstyle.xml using PHP_CodeSniffer">
  		<exec executable="phpcs${ext}">
   			<arg line="--tab-width=2 --report=checkstyle --report-file=${basedir}/_logs/phpcs/checkstyle.xml --standard=${metrics.standard} ${basedir}/www/sites/all/modules/custom --ignore=${metrics.ignore}" />
  		</exec>
 	</target>

 	<target name="phpcpd" description="Generate pmd-cpd.xml using PHPCPD">
  		<exec executable="phpcpd${ext}">
   			<arg line="--log-pmd ${basedir}/_logs/phpcpd/pmd-cpd.xml --exclude ${metrics.ignore} --suffixes ${php.suffixes} ${basedir}/www/sites/all/modules/custom" />
  		</exec>
 	</target>

 	<target name="phploc" description="Generate phploc.csv">
  		<exec executable="phploc${ext}">
   			<arg line="--log-xml ${basedir}/_logs/phploc/phploc.csv --exclude ${metrics.ignore} --suffixes ${php.suffixes} ${basedir}/www/sites/all/modules/custom" />
  		</exec>
 	</target>

	<target name="doxygen" description="Generate doxygen docs">
		<exec dir="${basedir}" executable="doxygen">
			<arg line="${basedir}/doxygen.conf" />
		</exec>
	</target>

	<target name="test" description="Run unit tests using SimpleTest">
  		<exec executable="drush${ext}" failonerror="true">
  			<arg line="-r ${basedir}/www -l http://${subdomain}.${domain} test-run AdminMenuLinksTestCase" />
        <arg line="-r ${basedir}/www -l http://${subdomain}.${domain} test-run BillableTestCase" />
        <arg line="-r ${basedir}/www -l http://${subdomain}.${domain} test-run FeatureInvoiceTestCase" />
  		</exec>
 	</target>

	<target name="permissions" description="Configures the directories and directory permissions.">
  		<exec executable="./presetup.sh" failonerror="false" />
 	</target>

	<target name="archive" description="Packs the whole project as a tarball">
		<tar destfile="_snapshots/snapshot.tar.gz" basedir="${basedir}" compression="gzip" longfile="gnu">
			<include name="**" />
			
			<exclude name="**/.svn/**" />
			<exclude name="**/.git/**" />
			<exclude name="_snapshots/" />
		</tar>
	</target>

	<target name="updatescripts.run" description="Runs the update scripts" >
		<exec executable="wget" failonerror="true">
			<arg line="--spider ${updatescripts.process.url}" />
		</exec>
	</target>

	<!-- call with ant -Dsnapshot.tag=tag snapshot -->
	<target name="snapshot" depends="updatescripts.run,doxygen,metrics" description="Creates a snapshot tag in git and an archive" >
		<fail message="Please set snapshot.tag" unless="snapshot.tag" />
		<exec executable="bash" failonerror="true" dir="${basedir}">
			<arg value="${basedir}/snapshot.sh" />
			<arg value="${snapshot.tag}" />
			<arg value="${updatescripts.clear.url}" />
			<arg value="${dump.db.url}" />
		</exec>
        <antcall target="archive" />
	</target>

	<target name="build" depends="clean" />
</project>
